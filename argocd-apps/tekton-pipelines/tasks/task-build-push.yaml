apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: build-and-push
  namespace: test
spec:
  description: >
    Build and push a Docker image using Kaniko. 
    Generates a unique tag automatically (build-<timestamp>).

  # Parameters
  params:
    - name: IMAGE_REPO
      type: string
      description: "Registry/repo, e.g. docker.io/owllabsdocker/owllabs"
    - name: CONTEXT
      type: string
      default: .
      description: "Path to build context inside source workspace"

  # Results (for chaining in Pipelines)
  results:
    - name: image-tag
      description: "The generated tag, e.g. build-1723989183"
    - name: built-image
      description: "The full image reference with tag"

  # Workspaces
  workspaces:
    - name: source
      description: "Workspace with app source + Dockerfile"
    - name: dockerconfig
      description: "Workspace with Docker config.json for registry auth"

  steps:
    # Step 1: Generate unique tag
    - name: generate-tag
      image: alpine:3.20
      script: |
        #!/bin/sh
        TAG="build-$(date +%s)"
        IMAGE="$(params.IMAGE_REPO):${TAG}"

        echo "Generated tag: ${TAG}"
        echo "Full image: ${IMAGE}"

        # Write to Task results
        echo -n "${TAG}" > $(results.image-tag.path)
        echo -n "${IMAGE}" > $(results.built-image.path)

    # Step 2: Build & push with Kaniko
    - name: kaniko-build
      image: gcr.io/kaniko-project/executor:v1.23.2
      args:
        - --dockerfile=$(workspaces.source.path)/Dockerfile
        - --context=$(workspaces.source.path)/$(params.CONTEXT)
        - --destination=$(results.built-image.path)
      volumeMounts:
        - name: docker-config
          mountPath: /kaniko/.docker

